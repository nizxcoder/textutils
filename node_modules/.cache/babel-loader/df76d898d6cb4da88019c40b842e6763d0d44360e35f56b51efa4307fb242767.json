{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\React.js\\\\first-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\nimport './body.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [alert, setAlert] = useState(null);\n  const [text, setText] = useState('⚫');\n  const [mode, setMode] = useState({\n    color: 'black',\n    backgroundColor: 'white',\n    transition: 'all 1s'\n  });\n  const setBackground = () => {\n    if (text === \"⚫\") {\n      setMode({\n        color: 'white',\n        backgroundColor: 'black',\n        transition: 'all 1s',\n        borderColor: \"white\"\n      });\n      setText(\"☀️\");\n      document.body.style.backgroundColor = \"black\";\n      document.body.style.transition = \"all 1s\";\n    } else {\n      setMode({\n        color: 'black',\n        backgroundColor: 'white',\n        transition: 'all 1s'\n        // border: '1px solid black'\n      });\n\n      setText(\"⚫\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.transition = \"all 1s\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        name: \"Converter\",\n        mode: mode,\n        changeMode: setBackground,\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Enter the text to convert in UpperCase or LowerCase.\",\n        mode: mode,\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"ZmhLD9hEvxubDq8ETGWIUdPqoZg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Alert","Navbar","TextForm","App","alert","setAlert","text","setText","mode","setMode","color","backgroundColor","transition","setBackground","borderColor","document","body","style"],"sources":["C:/Users/hp/OneDrive/Desktop/React.js/first-app/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\nimport './body.css'\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nfunction App() {\n  const [alert, setAlert] = useState(null);\n  const [text, setText] = useState('⚫');\n  const [mode, setMode] = useState({\n    color: 'black',\n    backgroundColor: 'white',\n    transition: 'all 1s'\n  });\n  \n  const setBackground = () => {\n    if (text === \"⚫\") {\n      setMode({\n        color: 'white',\n        backgroundColor: 'black',\n        transition: 'all 1s',    \n        borderColor: \"white\"    \n      });\n      setText(\"☀️\");\n      document.body.style.backgroundColor = \"black\";\n      document.body.style.transition = \"all 1s\";\n    }\n    else {\n      setMode({\n        color: 'black',\n        backgroundColor: 'white',\n        transition: 'all 1s'\n        // border: '1px solid black'\n      });\n      setText(\"⚫\");\n      document.body.style.backgroundColor = \"white\"\n      document.body.style.transition = \"all 1s\";\n\n    }\n  }\n  return (\n    <>\n      <div>\n        <Navbar title='TextUtils' name=\"Converter\" mode={mode} changeMode={setBackground} text={text} />\n        <Alert alert={alert}/>\n        <TextForm heading=\"Enter the text to convert in UpperCase or LowerCase.\" mode={mode} text={text}/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAO,YAAY;AACnB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAAC;AAAA;AAC7C,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,GAAG,CAAC;EACrC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAC/BW,KAAK,EAAE,OAAO;IACdC,eAAe,EAAE,OAAO;IACxBC,UAAU,EAAE;EACd,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAG,MAAM;IAC1B,IAAIP,IAAI,KAAK,GAAG,EAAE;MAChBG,OAAO,CAAC;QACNC,KAAK,EAAE,OAAO;QACdC,eAAe,EAAE,OAAO;QACxBC,UAAU,EAAE,QAAQ;QACpBE,WAAW,EAAE;MACf,CAAC,CAAC;MACFP,OAAO,CAAC,IAAI,CAAC;MACbQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACN,eAAe,GAAG,OAAO;MAC7CI,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACL,UAAU,GAAG,QAAQ;IAC3C,CAAC,MACI;MACHH,OAAO,CAAC;QACNC,KAAK,EAAE,OAAO;QACdC,eAAe,EAAE,OAAO;QACxBC,UAAU,EAAE;QACZ;MACF,CAAC,CAAC;;MACFL,OAAO,CAAC,GAAG,CAAC;MACZQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACN,eAAe,GAAG,OAAO;MAC7CI,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACL,UAAU,GAAG,QAAQ;IAE3C;EACF,CAAC;EACD,oBACE;IAAA,uBACE;MAAA,wBACE,QAAC,MAAM;QAAC,KAAK,EAAC,WAAW;QAAC,IAAI,EAAC,WAAW;QAAC,IAAI,EAAEJ,IAAK;QAAC,UAAU,EAAEK,aAAc;QAAC,IAAI,EAAEP;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,eAChG,QAAC,KAAK;QAAC,KAAK,EAAEF;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE,eACtB,QAAC,QAAQ;QAAC,OAAO,EAAC,sDAAsD;QAAC,IAAI,EAAEI,IAAK;QAAC,IAAI,EAAEF;MAAK;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EAC9F,iBACL;AAEP;AAAC,GA3CQH,GAAG;AAAA,KAAHA,GAAG;AA6CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}